{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Primeira App API"
  },
  "host": "localhost:3001",
  "basePath": "/api",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/produtos": {
      "get": {
        "description": "Retorna a lista de produtos",
        "operationId": "list",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Produto"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "Cria um novo produto",
        "operationId": "insert",
        "parameters": [
          {
            "name": "produto",
            "in": "body",
            "description": "Representa o objeto produto que será atualizado",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Produto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Produto"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/produtos/{produtoId}": {
      "get": {
        "description": "Retorna o produto relacionado ao identificador informado",
        "operationId": "findProdutoById",
        "parameters": [
          {
            "name": "produtoId",
            "in": "path",
            "description": "O identificador do produto que será obtido.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta esperada para um request válido",
            "schema": {
              "$ref": "#/definitions/Produto"
            }
          },
          "default": {
            "description": "Erro inesperado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "description": "Altera o produto informado pelo identificador",
        "operationId": "update",
        "parameters": [
          {
            "name": "produtoId",
            "in": "path",
            "description": "O identificador do produto que será obtido.",
            "required": true,
            "type": "string"
          },
          {
            "name": "produto",
            "in": "body",
            "description": "Representa o objeto produto que será atualizado",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Produto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta esperada para um request válido",
            "schema": {
              "$ref": "#/definitions/Produto"
            }
          },
          "default": {
            "description": "Erro inesperado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "Remove o produto informado pelo identificador",
        "operationId": "del",
        "parameters": [
          {
            "name": "produtoId",
            "in": "path",
            "description": "O identificador do produto que será obtido.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Resposta esperada para um request válido"
          },
          "404": {
            "description": "Não foi encontrado produto para o identificador informado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Erro inesperado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/clientes": {
      "get": {
        "description": "Retorna a lista de clientes",
        "operationId": "list",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Cliente"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "Cria um novo cliente",
        "operationId": "insert",
        "parameters": [
          {
            "name": "cliente",
            "in": "body",
            "description": "Representa o objeto cliente que será atualizado",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cliente"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Cliente"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/clientes/{clienteId}": {
      "get": {
        "description": "Retorna o cliente relacionado ao identificador informado",
        "operationId": "findClienteById",
        "parameters": [
          {
            "name": "clienteId",
            "in": "path",
            "description": "O identificador do cliente que será obtido.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta esperada para um request válido",
            "schema": {
              "$ref": "#/definitions/Cliente"
            }
          },
          "default": {
            "description": "Erro inesperado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "description": "Altera o cliente informado pelo identificador",
        "operationId": "update",
        "parameters": [
          {
            "name": "clienteId",
            "in": "path",
            "description": "O identificador do cliente que será obtido.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cliente",
            "in": "body",
            "description": "Representa o objeto cliente que será atualizado",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cliente"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta esperada para um request válido",
            "schema": {
              "$ref": "#/definitions/Cliente"
            }
          },
          "default": {
            "description": "Erro inesperado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "Remove o cliente informado pelo identificador",
        "operationId": "del",
        "parameters": [
          {
            "name": "clienteId",
            "in": "path",
            "description": "O identificador do cliente que será obtido.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Resposta esperada para um request válido"
          },
          "404": {
            "description": "Não foi encontrado cliente para o identificador informado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Erro inesperado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Produto": {
      "required": ["nome", "preco", "desconto"],
      "properties": {
        "_id": {
          "type": "string"
        },
        "nome": {
          "type": "string"
        },
        "preco": {
          "type": "number"
        },
        "desconto": {
          "type": "number"
        }
      }
    },
    "Cliente": {
      "required": ["nome", "idade"],
      "properties": {
        "_id": {
          "type": "string"
        },
        "nome": {
          "type": "string"
        },
        "idade": {
          "type": "number"
        }
      }
    },
    "Error": {
      "required": ["error"],
      "properties": {
        "error": {
          "type": "string"
        }
      }
    }
  }
}
